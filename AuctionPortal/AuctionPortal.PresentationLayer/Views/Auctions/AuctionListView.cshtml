@using System.Web.Mvc.Html
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common

@model AuctionPortal.PresentationLayer.Models.Auctions.AuctionListViewModel

@{
	ViewBag.Title = "AuctionListView";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@section head{
	@Styles.Render("~/Content/css/tree.css")
	@Styles.Render("~/Content/css/PagedList.css")
	@Styles.Render("~/Content/themes/base/jquery-ui.css")
}

<div class="row">
    <div class="col-md-3">
        <br />
        <br />
        @using (Html.BeginForm())
        {
            <div class="form-group form-row col-md-12">
                @Html.LabelFor(model => model.CategoriesSelectList, htmlAttributes: new { @class = "col-form-label col-md-4" }, labelText: "Select Category")
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.CategoryId, Model.CategoriesSelectList, "Select...", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-row col-md-12">
                @Html.LabelFor(model => model.Filter.Name, "Auction Name", new { @class = "col-form-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Filter.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Filter.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group form-row col-md-12">
                @Html.LabelFor(model => model.Filter.SortCriteria, "Sort by:", new { @class = "col-form-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.Filter.SortCriteria, Model.AllSortCriteria, "Select...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Filter.SortCriteria, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-check form-row">
                @Html.LabelFor(model => model.Filter.SortAscending, "Ascending", new { @class = "form-check-label" })
                @Html.CheckBoxFor(model => model.Filter.SortAscending, new { htmlAttributes = new { @class = "form-check-input" } })
                @Html.ValidationMessageFor(model => model.Filter.SortAscending, "", new { @class = "text-danger" })
            </div>

            <div class="row btn-toolbar justify-content-around" role="toolbar" style="margin-bottom: 5px">
                <div class="btn-group">
                    <input type="button" class="btn btn-danger" value="Clear" onclick="location.href = '@Url.Action("ClearFilter", "Auctions")'" />
                </div>
                <div class="btn-group">
                    <button class="btn btn-success" id="btnSubmit" type="submit">Filter </button>
                </div>
            </div>

        }
    </div>
</div>
<div class="row w-100 p-3">
	<div class="col-lg-12">
		<div class="list-group text-center">
			@{foreach (var auction in Model.Auctions)
				{
					<div class="d-flex">
						<div class="list-group-item list-group-item-action clickable-area" @("onclick=GoToDetail('" + auction.Id + "')")>

							<div class="d-flex justify-content-between ">
								<h3 class="mb-3" style="overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" id="thumbnail-label">@auction.Name</h3>
								<h5>Closing time: @auction.ClosingTime</h5>
								<h5>Actual price: @auction.ActualPrice CZK</h5>
							</div>
						</div>
					</div>
				}}
		</div>
	</div>
</div>

<div class="row justify-content-center">
	@Html.PagedListPager(Model.Auctions, page => Url.Action("Index", new { page }), new PagedListRenderOptions
	{
		LiElementClasses = new string[] { "page-item" },
		PageClasses = new string[] { "page-link" }
	})
</div>

<script>
	function GoToDetail(id) {
		window.location = "/Auctions/Details/" + id;
	}
</script>

@section scripts{
	@Scripts.Render("~/Scripts/tree.js")
	@Scripts.Render("~/Scripts/jquery-ui-1.12.1.js")
	@Scripts.Render("~/Scripts/slider.js")
}